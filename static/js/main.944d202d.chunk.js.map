{"version":3,"sources":["Box.js","BoxContainer.js","App.js","index.js"],"names":["ACTIONS","animations","on","bg","color","fontSize","off","firstTrans","ease","duration","repeat","Infinity","trans","variants","scale","transition","alreadyOn","x","first","reducer","state","action","type","isOn","Box","props","controls","useAnimation","useReducer","isFirst","text","dispatch","useEffect","start","div","style","backgroundColor","className","initial","animate","onClick","timerStart","timerStop","BoxContainer","key","count","boxList","map","num","index","App","timerRef","useRef","shuffle","array","Array","from","_","i","length","j","Math","floor","random","useState","setboxList","setCount","initialTime","timeToUpdate","startImmediately","ref","Minutes","formatValue","t","Seconds","Milliseconds","current","stop","reset","prevCount","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.944d202d.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst ACTIONS = {\r\n  TOGGLE_ON: \"toggleOn\",\r\n};\r\n\r\nconst animations = {\r\n  on: {\r\n    bg: \"#6200EE\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: \"1.8rem\",\r\n  },\r\n  off: {\r\n    bg: \"#FFFFFF\",\r\n    color: \"#aaaaaa\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  firstTrans: { ease: \"easeInOut\", duration: 1, repeat: Infinity },\r\n  trans: { ease: \"easeOut\", duration: 0.2 },\r\n};\r\n\r\nconst variants = {\r\n  on: {\r\n    scale: [1, 1.15, 1.1],\r\n    fontSize: [\r\n      animations.off.fontSize,\r\n      animations.on.fontSize,\r\n      animations.on.fontSize,\r\n    ],\r\n    transition: animations.trans,\r\n  },\r\n  off: {\r\n    scale: 1,\r\n    fontSize: animations.off.fontSize,\r\n    transition: animations.trans,\r\n  },\r\n  alreadyOn: {\r\n    x: [-5, 5, -3, 3, -1, 0],\r\n    scale: [1.1, 1.1, 1.1, 1.1, 1.1, 1.1],\r\n    transition: animations.trans,\r\n  },\r\n  first: {\r\n    scale: [1.2, 0.8, 1.2],\r\n    transition: animations.firstTrans,\r\n  },\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  // reducer function ------------------------\r\n  switch (action.type) {\r\n    case ACTIONS.TOGGLE_ON:\r\n      if (state.isOn === false) {\r\n        return {\r\n          ...state,\r\n          isOn: true,\r\n          bg: animations.on.bg,\r\n          color: animations.on.color,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Box = (props) => {\r\n  const controls = useAnimation();\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    isOn: false,\r\n    isFirst: props.text === 1 ? true : false,\r\n    bg: animations.off.bg,\r\n    color: animations.off.color,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (state.isFirst === true) {\r\n      controls.start(\"first\");\r\n    }\r\n  }, [controls, state.isFirst]);\r\n\r\n  const onBoxClick = () => {\r\n    if (state.isFirst === true) {\r\n      props.timerStart();\r\n    }\r\n    if (props.text === 25) {\r\n      props.timerStop();\r\n    }\r\n    if (state.isOn === false) {\r\n      controls.start(\"on\");\r\n    } else {\r\n      controls.start(\"alreadyon\");\r\n    }\r\n    dispatch({ type: ACTIONS.TOGGLE_ON });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        backgroundColor: state.bg,\r\n        color: state.color,\r\n      }}\r\n      className=\"Box\"\r\n      initial={false}\r\n      animate={controls}\r\n      variants={variants}\r\n      onClick={onBoxClick}\r\n    >\r\n      {props.text}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport Box from \"./Box.js\";\r\n\r\nconst BoxContainer = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"OuterContainer\" key={props.count}>\r\n        <div className=\"InnerContainer\">\r\n          {props.boxList.map((num, index) => (\r\n            <Box\r\n              text={num}\r\n              key={index}\r\n              timerStart={props.timerStart}\r\n              timerStop={props.timerStop}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoxContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./styles.css\";\r\nimport BoxContainer from \"./BoxContainer\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\n/* function YourComponent() {\r\n  const timerRef = useRef(null);\r\n\r\n  const onStop = () => {\r\n    timerRef.current.stop();\r\n  };\r\n\r\n  return <ReactTimer onStop={onStop} ref={timerRef} />;\r\n} */\r\n\r\nexport default function App() {\r\n  const timerRef = useRef(null);\r\n  const timerStart = () => {\r\n    timerRef.current.start();\r\n  };\r\n  const timerStop = () => {\r\n    timerRef.current.stop();\r\n  };\r\n  const timerReset = () => {\r\n    timerRef.current.reset();\r\n  };\r\n\r\n  const shuffle = () => {\r\n    let array = Array.from(Array(25), (_, x) => x + 1);\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const [boxList, setboxList] = useState(shuffle());\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const restartGame = () => {\r\n    timerReset();\r\n    setboxList(shuffle());\r\n    setCount((prevCount) => prevCount + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1>25 Buttons Game!</h1>\r\n\r\n        <div>\r\n          <h3 className=\"Timer\">\r\n            <Timer\r\n              initialTime={0}\r\n              timeToUpdate={29}\r\n              startImmediately={false}\r\n              ref={timerRef}\r\n            >\r\n              <Timer.Minutes formatValue={(t) => `${t < 10 ? `0${t}` : t}`} />\r\n              :\r\n              <Timer.Seconds formatValue={(t) => `${t < 10 ? `0${t}` : t}`} />\r\n              .\r\n              <Timer.Milliseconds\r\n                formatValue={(t) => {\r\n                  if (t < 10) {\r\n                    return `00${t}`;\r\n                  } else if (t < 100) {\r\n                    return `0${t}`;\r\n                  } else {\r\n                    return t;\r\n                  }\r\n                }}\r\n              />\r\n            </Timer>\r\n          </h3>\r\n          <BoxContainer\r\n            boxList={boxList}\r\n            count={count}\r\n            timerStart={timerStart}\r\n            timerStop={timerStop}\r\n          />\r\n          <button onClick={restartGame}>Randomize</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}